[
  {
    "id": 1,
    "title": "Introduction to Python",
    "slug": "introduction-to-python",
    "description": "Get started with Python basics, installation, and running your first code in a Jupyter notebook environment.",
    "iconName": "IntroIcon",
    "visible": true,
    "topics": [
      "Python Overview",
      "Setting Up Your Environment",
      "Jupyter Notebooks",
      "Basic Syntax",
      "Running Your First Program"
    ],
    "content": {
      "introduction": "ðŸš€ Welcome to your first Python adventure! In this interactive session, we'll dive into Python fundamentals through a comprehensive Jupyter notebook. Get ready to explore data types, control structures, and computational thinking concepts through hands-on exercises and real-world examples.",
      "sections": [
        {
          "title": "ðŸ“¥ Download Your Notebook",
          "content": "To begin this exciting journey, you'll need to download and open the Jupyter notebook that contains all your learning materials. The notebook is packed with code examples, exercises, and clear explanations.\n\n**Download the notebook using this command:**\n\n```bash\n# Open your terminal and run:\nwget https://raw.githubusercontent.com/linguist89/pcs-first-sem-2025-website/master/public/data/python_fundamentals.ipynb\n\n# Or download directly from your browser using this URL:\nhttps://raw.githubusercontent.com/linguist89/pcs-first-sem-2025-website/master/public/data/python_fundamentals.ipynb\n```\n\n> ðŸ’¡ **Pro Tip**: After downloading, open the notebook in Jupyter Notebook or JupyterLab to start your interactive learning experience!"
        },
        {
          "title": "ðŸ“š What You'll Learn",
          "content": "This comprehensive notebook includes:\n\nâœ¨ **Core Concepts**\n- Fundamental Python data types\n- Essential control structures\n- Function creation and usage\n\nðŸ”¨ **Practical Work**\n- Two engaging group exercises\n- Complete solution walkthroughs\n- Interactive coding challenges\n\nðŸ¤” **Deep Learning**\n- Thought-provoking reflection questions\n- Real-world applications\n- Best practices and tips"
        }
      ],
      "case_studies": [
        {
          "title": "Ariane 5 Disaster",
          "year": 1996,
          "description": "During its maiden flight, the Ariane 5 rocket self-destructed just 37 seconds after launch. The failure was caused by a data type conversion error: a 64-bit floating-point number (used to calculate the rocket's horizontal bias) was improperly converted into a 16-bit signed integer. This overflow led to a cascade of failures that resulted in the loss of the vehicle and cost hundreds of millions of dollars.",
          "data_type_issue": "Conversion from 64-bit float to 16-bit signed integer leading to an overflow error.",
          "source": "Bugsnag case study on Ariane 5 disaster"
        },
        {
          "title": "Fannie Mae Spreadsheet Error",
          "year": 2003,
          "description": "A formatting error in a Microsoft Excel spreadsheet contributed to a $1 billion mistake by Fannie Mae. The error stemmed from improper handling of data types, which led to significant numerical inaccuracies in financial calculations.",
          "data_type_issue": "Improper formatting and data type handling in spreadsheets, leading to numerical errors.",
          "source": "The Guardian: Microsoft Excel's bloopers reel and related articles"
        },
        {
          "title": "Tensor Shape Faults in Deep Learning Systems",
          "year": 2021,
          "description": "In production deep learning systems, tensor shape mismatches have led to system crashes and degraded model performance. Faults occur when expected tensor dimensions (often 64-bit floats) are implicitly cast or resized to lower-precision representations (e.g., 32-bit or 16-bit), causing subtle errors to accumulate and sometimes resulting in catastrophic failures.",
          "data_type_issue": "Mismatches in tensor data types and shapes (e.g., from 64-bit to 32-bit), leading to runtime errors.",
          "source": "An Empirical Study on Tensor Shape Faults in Deep Learning Systems (Wu et al., 2021)"
        },
        {
          "title": "ONNX Model Converter Failures",
          "year": 2023,
          "description": "Deep learning model converters, used to translate models between different frameworks, have encountered failures due to incorrect handling of data types. For instance, a model originally trained using 64-bit floating-point precision may be converted to use 32-bit floats in ONNX, reducing numerical precision and causing semantic errors in downstream computations.",
          "data_type_issue": "Errors in converting data types (from 64-bit to 32-bit floating-point) during model conversion.",
          "source": "Analysis of Failures and Risks in Deep Learning Model Converters: A Case Study in the ONNX Ecosystem (Jajal et al., 2023)"
        }
      ],
      "summary": "ðŸŽ¯ Your journey into Python programming starts here! This carefully crafted notebook will guide you through fundamental concepts with practical, hands-on exercises. Remember to experiment with the code and challenge yourself before checking the solutions. Happy coding! ðŸŽ‰"
    }
  },
  {
    "id": 2,
    "title": "Data Types and Variables",
    "slug": "data-types-and-variables",
    "description": "Learn about Python's core data types, variables, and how to manipulate different kinds of data.",
    "iconName": "DataTypesIcon",
    "visible": false,
    "topics": [
      "Numbers and Math Operations",
      "Strings and Text Manipulation",
      "Lists and Collections",
      "Dictionaries",
      "Type Conversion"
    ],
    "content": {
      "introduction": "Understanding data types and variables is fundamental to programming in Python. This lesson covers the main data types you'll use in cognitive science research and data analysis."
    }
  },
  {
    "id": 3,
    "title": "Control Flow",
    "slug": "control-flow",
    "description": "Master control structures like conditionals and loops to create dynamic and responsive programs.",
    "iconName": "ControlFlowIcon",
    "visible": false,
    "topics": [
      "Conditional Statements",
      "For Loops",
      "While Loops",
      "List Comprehensions",
      "Handling Exceptions"
    ]
  },
  {
    "id": 4,
    "title": "Functions and Modules",
    "slug": "functions-and-modules",
    "description": "Create reusable code with functions and organize your programs using Python modules.",
    "iconName": "FunctionsIcon",
    "visible": false,
    "topics": [
      "Defining Functions",
      "Parameters and Return Values",
      "Lambda Functions",
      "Importing Modules",
      "Python Standard Library"
    ]
  },
  {
    "id": 5,
    "title": "Data Analysis with Pandas",
    "slug": "data-analysis-with-pandas",
    "description": "Analyze and manipulate data effectively using the powerful Pandas library for data science.",
    "iconName": "PandasIcon",
    "visible": false,
    "topics": [
      "Introduction to Pandas",
      "DataFrames and Series",
      "Data Loading and Inspection",
      "Data Cleaning",
      "Data Aggregation and Grouping"
    ]
  },
  {
    "id": 6,
    "title": "Data Visualization",
    "slug": "data-visualization",
    "description": "Create informative and compelling visualizations using matplotlib, seaborn, and other Python libraries.",
    "iconName": "VisualizationIcon",
    "visible": false,
    "topics": [
      "Plotting with Matplotlib",
      "Statistical Visualization with Seaborn",
      "Interactive Plots",
      "Customizing Visualizations",
      "Visualization Best Practices"
    ]
  },
  {
    "id": 7,
    "title": "Machine Learning Basics",
    "slug": "machine-learning-basics",
    "description": "Get introduced to fundamental machine learning concepts and implement simple ML models with scikit-learn.",
    "iconName": "MachineLearningIcon",
    "visible": false,
    "topics": [
      "Machine Learning Overview",
      "Supervised vs. Unsupervised Learning",
      "Training and Testing Data",
      "Basic Classification Models",
      "Model Evaluation"
    ]
  }
] 